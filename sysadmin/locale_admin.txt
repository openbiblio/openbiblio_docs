== Managing locales

OpenBiblio can be translated into any language that you wish!

=== Character set

You can use any character set that you find by running the MySQL command link:https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html[SHOW CHARACTER SET].
Do this by going to Admin -> Locale and entering your preferred character set.
If you enter an invalid charset or leave this field blank, it will default to the _utf8_ character set.

NOTE: The character set you specify will appear in the `<meta charset>` attribute and apply to any database calls.

=== Creating a new locale

This requires access to the files and a good UTF-8 text editor.

==== Create a directory for your new locale

. Create a new directory in the locale directory with the 2-character ISO 639-1 code for the language. For example, if you would like to do an
Amharic translation, your directory would be called `am`.
+
NOTE: OpenBiblio traditionally uses the 2-character ISO 639-1 code, but you may also use a 3-character scheme or custom string if your language isn't represented in ISO 639-1.
+
. Create a PHP file called metadata.php. Make sure that the class name begins with the ISO 639-1 code for your language.
+
[source,php]
----
<?php
class amMetaData {
        public function __construct() {
                $this->locale_description = "Amharic";
        }
        function pluralForm($n) {
                if ($n == 1 or $n == -1) {
                        return 'singular';
                } else {
                        return 'plural';
                }
        }
        function moneyFormat($amount) {
                if ($amount < 0) {
                        return sprintf("(-%.br)", abs($amount));
                } else {
                        return sprintf("%.br", $amount);
                }
        }
}
----
+
. Add translations to trans.php.

